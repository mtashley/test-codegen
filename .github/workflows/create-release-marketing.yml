name: ðŸ“¦ Create Marketing Client

on:
  push:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: NPM Install
        run: npm install
      - name: Validate Marketing Spec
        run: npx @apidevtools/swagger-cli validate spec/marketing.json
      - name: Set Version
        id: set-version
        run: node utils/actions/setVersionVar.js --api=marketing

  setup-cache:
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - uses: actions/checkout@v2
      - name: Initialize Cache
        id: init-cache-mc
        uses: actions/cache@v1
        with:
          path: .cache
          key: cache-dir
      - name: Install Codegen CLI
        if: steps.init-cache-mc.outputs.cache-hit != 'true'
        run: |
          mkdir .cache
          wget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.7/swagger-codegen-cli-2.4.7.jar -O .cache/swagger-codegen-cli.jar
          java -jar .cache/swagger-codegen-cli.jar help

  generate-node:
    runs-on: ubuntu-latest
    needs: [validate, setup-cache]
    steps:
      - uses: actions/checkout@v2

      - name: Initialize Marketing Cache
        id: init-cache-mc
        uses: actions/cache@v1
        with:
          path: .cache
          key: cache-dir

      - name: Cache node_modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@mailchimp'

      - name: Generate â†’ marketing-javascript
        run: |
          npm install
          node utils/actions/updateLangConfig.js --api=marketing --lang=javascript --specVersion=${{ env.SPEC_VERSION }}
          npm run generate:javascript:marketing
          node utils/actions/generateTypes.js --api=marketing
        env:
          SPEC_VERSION: ${{ needs.validate.outputs.version }}

      - name: Rename marketing-javascript â†’ marketing-node
        working-directory: swagger-out
        run: |
          mv marketing-javascript marketing-node

      - name: Zip build artifact â†’ marketing-node
        working-directory: swagger-out/marketing-node
        run: zip -r mailchimp-marketing-node.zip .

      - name: Upload build artifact â†’ marketing-node
        uses: actions/upload-artifact@v1
        with:
          name: mailchimp-marketing-node.zip
          path: swagger-out/marketing-node/mailchimp-marketing-node.zip

  test-node:
    runs-on: ubuntu-latest
    needs: [generate-node]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@mailchimp'

      - name: Prepare Build & Publishing Tools
        run: npm install

      - uses: actions/download-artifact@v1
        with:
          name: mailchimp-marketing-node.zip
          path: zip

      - name: Unzip build artifact
        run: |
          unzip zip/mailchimp-marketing-node.zip -d test-marketing-node

      - name: Test via Jest â†’ marketing-node
        run: |
          ls -la
          npm run test -- MarketingTest.test.js
        env:
          MARKETING_API_KEY: ${{ secrets.MARKETING_API_KEY }}
          MARKETING_ACCESS_TOKEN: ${{ secrets.MARKETING_ACCESS_TOKEN }}
          MARKETING_SERVER: ${{ secrets.MARKETING_SERVER }}

  complete-success:
    runs-on: ubuntu-latest
    needs: [test-node]
    steps:
      - name: 'The first step'
        run: echo "Successful Marketing Build!"
